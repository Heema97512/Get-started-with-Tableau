<?xml version='1.0' encoding='utf-8' ?>

<!-- build 10200.17.0328.0755                               -->
<workbook source-build='10.2.1 (10200.17.0328.0755)' source-platform='win' version='10.2' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='Sheet1 (India)' inline='true' name='federated.0x02ttq063lvxf0zqjsb1191p08y' version='10.2'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='India' name='excel-direct.0ufiwvl069t85q183wk6s1ii0tb8'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/jkjk/Desktop/excel/India.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <relation connection='excel-direct.0ufiwvl069t85q183wk6s1ii0tb8' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:D19:no:A1:D19:0' header='yes' outcome='6'>
            <column datatype='string' name='State' ordinal='0' />
            <column datatype='string' name='City' ordinal='1' />
            <column datatype='integer' name='Population' ordinal='2' />
            <column datatype='real' name='Crimerate' ordinal='3' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>State</remote-name>
            <remote-type>130</remote-type>
            <local-name>[State]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>State</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>City</remote-name>
            <remote-type>130</remote-type>
            <local-name>[City]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>City</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Population</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Population]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Population</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Crimerate</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Crimerate]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Crimerate</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:D19:no:A1:D19:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <column datatype='string' name='[City]' role='dimension' semantic-role='[City].[Name]' type='nominal'>
        <semantic-values semantic-role='[City].[Name]'>
          <semantic-value key='&quot;Agattala&quot;' value='&quot;Agartala&quot;' />
          <semantic-value key='&quot;Bhubaneshwar&quot;' value='&quot;Bhubaneswar&quot;' />
          <semantic-value key='&quot;Chandigarh&quot;' value='&quot;Chandigarh&quot;' />
          <semantic-value key='&quot;Dispur&quot;' value='&quot;Jagdispur&quot;' />
          <semantic-value key='&quot;Hydrebad&quot;' value='&quot;Hyderabad&quot;' />
          <semantic-value key='&quot;Kolkatta&quot;' value='&quot;Kolkata&quot;' />
          <semantic-value key='&quot;manipur&quot;' value='&quot;Kochi&quot;' />
          <semantic-value key='&quot;Thiruvanathapuram&quot;' value='&quot;Thiruvananthapuram&quot;' />
        </semantic-values>
      </column>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal'>
        <semantic-values semantic-role='[State].[Name]'>
          <semantic-value key='&quot;Jarkandh&quot;' value='&quot;Jharkhand&quot;' />
          <semantic-value key='&quot;Maharastra&quot;' value='&quot;Maharashtra&quot;' />
          <semantic-value key='&quot;Tirupura&quot;' value='&quot;Nagaland&quot;' />
        </semantic-values>
      </column>
      <drill-paths>
        <drill-path name='State, City'>
          <field>[State]</field>
          <field>[City]</field>
        </drill-path>
      </drill-paths>
      <layout dim-ordering='alphabetic' dim-percentage='0.510373' measure-ordering='alphabetic' measure-percentage='0.489627' show-structure='true' user-set-layout='true' />
      <semantic-values>
        <semantic-value key='[City].[Name]' value='%null%' />
        <semantic-value key='[Country].[Name]' value='&quot;India&quot;' />
        <semantic-value key='[State].[Name]' value='&quot;Andaman and Nicobar&quot;' />
      </semantic-values>
      <field-sort-info field-sort-order='descending' field-sort-order-type='alphabetical-order' />
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <worksheets>
    <worksheet name='Map representation of population in our country'>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (India)' name='federated.0x02ttq063lvxf0zqjsb1191p08y' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0x02ttq063lvxf0zqjsb1191p08y'>
            <column datatype='string' name='[City]' role='dimension' semantic-role='[City].[Name]' type='nominal'>
              <semantic-values semantic-role='[City].[Name]'>
                <semantic-value key='&quot;Agattala&quot;' value='&quot;Agartala&quot;' />
                <semantic-value key='&quot;Bhubaneshwar&quot;' value='&quot;Bhubaneswar&quot;' />
                <semantic-value key='&quot;Chandigarh&quot;' value='&quot;Chandigarh&quot;' />
                <semantic-value key='&quot;Dispur&quot;' value='&quot;Jagdispur&quot;' />
                <semantic-value key='&quot;Hydrebad&quot;' value='&quot;Hyderabad&quot;' />
                <semantic-value key='&quot;Kolkatta&quot;' value='&quot;Kolkata&quot;' />
                <semantic-value key='&quot;manipur&quot;' value='&quot;Kochi&quot;' />
                <semantic-value key='&quot;Thiruvanathapuram&quot;' value='&quot;Thiruvananthapuram&quot;' />
              </semantic-values>
            </column>
            <column datatype='real' name='[Crimerate]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Population]' role='measure' type='quantitative' />
            <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal'>
              <semantic-values semantic-role='[State].[Name]'>
                <semantic-value key='&quot;Jarkandh&quot;' value='&quot;Jharkhand&quot;' />
                <semantic-value key='&quot;Maharastra&quot;' value='&quot;Maharashtra&quot;' />
                <semantic-value key='&quot;Tirupura&quot;' value='&quot;Nagaland&quot;' />
              </semantic-values>
            </column>
            <column-instance column='[City]' derivation='None' name='[none:City:nk]' pivot='key' type='nominal' />
            <column-instance column='[State]' derivation='None' name='[none:State:nk]' pivot='key' type='nominal' />
            <column-instance column='[Crimerate]' derivation='Sum' name='[sum:Crimerate:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Population]' derivation='Sum' name='[sum:Population:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.0x02ttq063lvxf0zqjsb1191p08y].[sum:Crimerate:qk]' palette='sunrise_sunset_diverging_10_0' symmetric='false' type='interpolated' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='tab_base' value='true' />
            <format attr='enabled' id='um_lcover' value='true' />
            <format attr='enabled' id='tab_coastline' value='false' />
            <format attr='enabled' id='pp2_line' value='false' />
            <format attr='enabled' id='light_adm0_bnd' value='false' />
            <format attr='enabled' id='light_adm0_lbl' value='false' />
            <format attr='enabled' id='um_adm0_bnd' value='true' />
            <format attr='enabled' id='um_adm0_lbl' value='true' />
            <format attr='enabled' id='light_pp2_statebounds' value='false' />
            <format attr='enabled' id='light_pp2_statelabels' value='false' />
            <format attr='enabled' id='pp2_adminlabels' value='false' />
            <format attr='enabled' id='pp2_statebounds' value='true' />
            <format attr='enabled' id='pp2_statelabels' value='true' />
            <format attr='enabled' id='countybounds' value='false' />
            <format attr='enabled' id='countylabels' value='false' />
            <format attr='enabled' id='zipbounds' value='false' />
            <format attr='enabled' id='ziplabels' value='false' />
            <format attr='enabled' id='tab_areabounds' value='false' />
            <format attr='enabled' id='tab_arealabels' value='false' />
            <format attr='enabled' id='tab_msabounds' value='false' />
            <format attr='enabled' id='tab_msalabels' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.0x02ttq063lvxf0zqjsb1191p08y].[sum:Population:qk]' />
              <lod column='[federated.0x02ttq063lvxf0zqjsb1191p08y].[none:State:nk]' />
              <lod column='[federated.0x02ttq063lvxf0zqjsb1191p08y].[none:City:nk]' />
              <size column='[federated.0x02ttq063lvxf0zqjsb1191p08y].[sum:Population:qk]' />
              <color column='[federated.0x02ttq063lvxf0zqjsb1191p08y].[sum:Crimerate:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0x02ttq063lvxf0zqjsb1191p08y].[Latitude (generated)]</rows>
        <cols>[federated.0x02ttq063lvxf0zqjsb1191p08y].[Longitude (generated)]</cols>
      </table>
    </worksheet>
    <worksheet name='barchat representation of states'>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (India)' name='federated.0x02ttq063lvxf0zqjsb1191p08y' />
          </datasources>
          <datasource-dependencies datasource='federated.0x02ttq063lvxf0zqjsb1191p08y'>
            <column datatype='real' name='[Crimerate]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Population]' role='measure' type='quantitative' />
            <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal'>
              <semantic-values semantic-role='[State].[Name]'>
                <semantic-value key='&quot;Jarkandh&quot;' value='&quot;Jharkhand&quot;' />
                <semantic-value key='&quot;Maharastra&quot;' value='&quot;Maharashtra&quot;' />
                <semantic-value key='&quot;Tirupura&quot;' value='&quot;Nagaland&quot;' />
              </semantic-values>
            </column>
            <column-instance column='[State]' derivation='None' name='[none:State:nk]' pivot='key' type='nominal' />
            <column-instance column='[Crimerate]' derivation='Sum' name='[sum:Crimerate:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Population]' derivation='Sum' name='[sum:Population:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.0x02ttq063lvxf0zqjsb1191p08y].[sum:Population:qk]' palette='red_10_0' type='interpolated' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0x02ttq063lvxf0zqjsb1191p08y].[sum:Population:qk]' />
              <size column='[federated.0x02ttq063lvxf0zqjsb1191p08y].[sum:Crimerate:qk]' />
              <text column='[federated.0x02ttq063lvxf0zqjsb1191p08y].[sum:Crimerate:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0x02ttq063lvxf0zqjsb1191p08y].[none:State:nk]</rows>
        <cols>[federated.0x02ttq063lvxf0zqjsb1191p08y].[sum:Population:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='map by crime rate'>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (India)' name='federated.0x02ttq063lvxf0zqjsb1191p08y' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0x02ttq063lvxf0zqjsb1191p08y'>
            <column datatype='string' name='[City]' role='dimension' semantic-role='[City].[Name]' type='nominal'>
              <semantic-values semantic-role='[City].[Name]'>
                <semantic-value key='&quot;Agattala&quot;' value='&quot;Agartala&quot;' />
                <semantic-value key='&quot;Bhubaneshwar&quot;' value='&quot;Bhubaneswar&quot;' />
                <semantic-value key='&quot;Chandigarh&quot;' value='&quot;Chandigarh&quot;' />
                <semantic-value key='&quot;Dispur&quot;' value='&quot;Jagdispur&quot;' />
                <semantic-value key='&quot;Hydrebad&quot;' value='&quot;Hyderabad&quot;' />
                <semantic-value key='&quot;Kolkatta&quot;' value='&quot;Kolkata&quot;' />
                <semantic-value key='&quot;manipur&quot;' value='&quot;Kochi&quot;' />
                <semantic-value key='&quot;Thiruvanathapuram&quot;' value='&quot;Thiruvananthapuram&quot;' />
              </semantic-values>
            </column>
            <column datatype='real' name='[Crimerate]' role='measure' type='quantitative' />
            <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal'>
              <semantic-values semantic-role='[State].[Name]'>
                <semantic-value key='&quot;Jarkandh&quot;' value='&quot;Jharkhand&quot;' />
                <semantic-value key='&quot;Maharastra&quot;' value='&quot;Maharashtra&quot;' />
                <semantic-value key='&quot;Tirupura&quot;' value='&quot;Nagaland&quot;' />
              </semantic-values>
            </column>
            <column-instance column='[Crimerate]' derivation='Max' name='[max:Crimerate:qk]' pivot='key' type='quantitative' />
            <column-instance column='[City]' derivation='None' name='[none:City:nk]' pivot='key' type='nominal' />
            <column-instance column='[State]' derivation='None' name='[none:State:nk]' pivot='key' type='nominal' />
            <column-instance column='[Crimerate]' derivation='Sum' name='[sum:Crimerate:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.0x02ttq063lvxf0zqjsb1191p08y].[sum:Crimerate:qk]' palette='red_gold_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='tab_base' value='true' />
            <format attr='enabled' id='um_lcover' value='true' />
            <format attr='enabled' id='tab_coastline' value='false' />
            <format attr='enabled' id='pp2_line' value='false' />
            <format attr='enabled' id='light_adm0_bnd' value='false' />
            <format attr='enabled' id='light_adm0_lbl' value='false' />
            <format attr='enabled' id='um_adm0_bnd' value='true' />
            <format attr='enabled' id='um_adm0_lbl' value='true' />
            <format attr='enabled' id='light_pp2_statebounds' value='false' />
            <format attr='enabled' id='light_pp2_statelabels' value='false' />
            <format attr='enabled' id='pp2_adminlabels' value='false' />
            <format attr='enabled' id='pp2_statebounds' value='true' />
            <format attr='enabled' id='pp2_statelabels' value='true' />
            <format attr='enabled' id='countybounds' value='false' />
            <format attr='enabled' id='countylabels' value='false' />
            <format attr='enabled' id='zipbounds' value='false' />
            <format attr='enabled' id='ziplabels' value='false' />
            <format attr='enabled' id='tab_areabounds' value='false' />
            <format attr='enabled' id='tab_arealabels' value='false' />
            <format attr='enabled' id='tab_msabounds' value='false' />
            <format attr='enabled' id='tab_msalabels' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0x02ttq063lvxf0zqjsb1191p08y].[sum:Crimerate:qk]' />
              <text column='[federated.0x02ttq063lvxf0zqjsb1191p08y].[sum:Crimerate:qk]' />
              <lod column='[federated.0x02ttq063lvxf0zqjsb1191p08y].[none:State:nk]' />
              <lod column='[federated.0x02ttq063lvxf0zqjsb1191p08y].[none:City:nk]' />
              <size column='[federated.0x02ttq063lvxf0zqjsb1191p08y].[max:Crimerate:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0x02ttq063lvxf0zqjsb1191p08y].[Latitude (generated)]</rows>
        <cols>[federated.0x02ttq063lvxf0zqjsb1191p08y].[Longitude (generated)]</cols>
      </table>
    </worksheet>
    <worksheet name='map by populatio'>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (India)' name='federated.0x02ttq063lvxf0zqjsb1191p08y' />
          </datasources>
          <datasource-dependencies datasource='federated.0x02ttq063lvxf0zqjsb1191p08y'>
            <column datatype='real' name='[Crimerate]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Population]' role='measure' type='quantitative' />
            <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal'>
              <semantic-values semantic-role='[State].[Name]'>
                <semantic-value key='&quot;Jarkandh&quot;' value='&quot;Jharkhand&quot;' />
                <semantic-value key='&quot;Maharastra&quot;' value='&quot;Maharashtra&quot;' />
                <semantic-value key='&quot;Tirupura&quot;' value='&quot;Nagaland&quot;' />
              </semantic-values>
            </column>
            <column-instance column='[State]' derivation='None' name='[none:State:nk]' pivot='key' type='nominal' />
            <column-instance column='[Crimerate]' derivation='Sum' name='[sum:Crimerate:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Population]' derivation='Sum' name='[sum:Population:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.0x02ttq063lvxf0zqjsb1191p08y].[sum:Population:qk]' palette='green_blue_diverging_10_0' type='interpolated' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='on' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <size column='[federated.0x02ttq063lvxf0zqjsb1191p08y].[sum:Population:qk]' />
              <color column='[federated.0x02ttq063lvxf0zqjsb1191p08y].[sum:Population:qk]' />
              <text column='[federated.0x02ttq063lvxf0zqjsb1191p08y].[none:State:nk]' />
              <text column='[federated.0x02ttq063lvxf0zqjsb1191p08y].[sum:Crimerate:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
    </worksheet>
    <worksheet name='sample information about country'>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (India)' name='federated.0x02ttq063lvxf0zqjsb1191p08y' />
          </datasources>
          <datasource-dependencies datasource='federated.0x02ttq063lvxf0zqjsb1191p08y'>
            <column datatype='real' name='[Crimerate]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Population]' role='measure' type='quantitative' />
            <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal'>
              <semantic-values semantic-role='[State].[Name]'>
                <semantic-value key='&quot;Jarkandh&quot;' value='&quot;Jharkhand&quot;' />
                <semantic-value key='&quot;Maharastra&quot;' value='&quot;Maharashtra&quot;' />
                <semantic-value key='&quot;Tirupura&quot;' value='&quot;Nagaland&quot;' />
              </semantic-values>
            </column>
            <column-instance column='[State]' derivation='None' name='[none:State:nk]' pivot='key' type='nominal' />
            <column-instance column='[Crimerate]' derivation='Sum' name='[sum:Crimerate:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Population]' derivation='Sum' name='[sum:Population:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0x02ttq063lvxf0zqjsb1191p08y].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0x02ttq063lvxf0zqjsb1191p08y].[sum:Crimerate:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0x02ttq063lvxf0zqjsb1191p08y].[sum:Population:qk]&quot;' />
            </groupfilter>
          </filter>
          <sort class='manual' column='[federated.0x02ttq063lvxf0zqjsb1191p08y].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.0x02ttq063lvxf0zqjsb1191p08y].[sum:Population:qk]&quot;</bucket>
              <bucket>&quot;[federated.0x02ttq063lvxf0zqjsb1191p08y].[sum:Crimerate:qk]&quot;</bucket>
            </dictionary>
          </sort>
          <slices>
            <column>[federated.0x02ttq063lvxf0zqjsb1191p08y].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.0x02ttq063lvxf0zqjsb1191p08y].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0x02ttq063lvxf0zqjsb1191p08y].[none:State:nk]</rows>
        <cols>[federated.0x02ttq063lvxf0zqjsb1191p08y].[:Measure Names]</cols>
      </table>
    </worksheet>
  </worksheets>
  <windows source-height='30'>
    <window class='worksheet' name='sample information about country'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0x02ttq063lvxf0zqjsb1191p08y].[none:State:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='map by populatio'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0x02ttq063lvxf0zqjsb1191p08y].[sum:Population:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0x02ttq063lvxf0zqjsb1191p08y].[sum:Population:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='map by crime rate'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0x02ttq063lvxf0zqjsb1191p08y].[max:Crimerate:qk]' type='size' />
            <card pane-specification-id='0' param='[federated.0x02ttq063lvxf0zqjsb1191p08y].[sum:Crimerate:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0x02ttq063lvxf0zqjsb1191p08y].[none:City:nk]</field>
            <field>[federated.0x02ttq063lvxf0zqjsb1191p08y].[none:State:nk]</field>
            <field>[federated.0x02ttq063lvxf0zqjsb1191p08y].[sum:Crimerate:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='barchat representation of states'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0x02ttq063lvxf0zqjsb1191p08y].[sum:Population:qk]' type='color' />
            <card pane-specification-id='0' param='[federated.0x02ttq063lvxf0zqjsb1191p08y].[sum:Crimerate:qk]' type='size' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0x02ttq063lvxf0zqjsb1191p08y].[none:State:nk]</field>
            <field>[federated.0x02ttq063lvxf0zqjsb1191p08y].[sum:Population:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' maximized='true' name='Map representation of population in our country'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0x02ttq063lvxf0zqjsb1191p08y].[sum:Crimerate:qk]' type='color' />
            <card pane-specification-id='0' param='[federated.0x02ttq063lvxf0zqjsb1191p08y].[sum:Population:qk]' type='size' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0x02ttq063lvxf0zqjsb1191p08y].[none:City:nk]</field>
            <field>[federated.0x02ttq063lvxf0zqjsb1191p08y].[sum:Crimerate:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Map representation of population in our country' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='barchat representation of states' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='map by crime rate' width='192'>
      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
      JwvTGyv0AAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='map by populatio' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='sample information about country' width='192'>
      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
      hYgBAAAAAElFTkSuQmCC
    </thumbnail>
  </thumbnails>
</workbook>
